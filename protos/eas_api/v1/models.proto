syntax = "proto3";

package eas_api.v1;
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "eas_api/api/v1;v1";

//===============================用户模块=========================================

message LoginRequest {
  string login_account=1 [json_name="login_account",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"登录名",required:["login_account"], max_length:10, min_length:6}];
  string pass_word=2 [json_name="pass_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"密码",required:["pass_word"], max_length:10, min_length:6}];
}


message LoginResponse {
  string user_name=1 [json_name="user_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"登录名"}];
  UserType user_type=2 [json_name="user_type",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"0.管理员;1.普通用户"}];
  string token=3 [json_name="token=",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"token"}];
}

message CreateUserRequest {
  string user_name=1 [json_name="user_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户名",required:["user_name"], max_length:10, min_length:1}];
  string login_account=2 [json_name="login_account",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"登录名",required:["login_account"], max_length:10, min_length:6}];
  string pass_word=3 [json_name="pass_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"密码",required:["pass_word"], max_length:10, min_length:6}];
  string email=4 [json_name="email",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"邮箱",required:["email"]}];
  AccountStatus user_status=5 [json_name="user_status",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否激活,1.已激活;0.未激活",required:["user_status"]}];
  UserType user_type=6 [json_name="user_type",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户类型,0.管理员;1.普通用户",required:["user_type"]}];
}
message CreateUserResponse {

}

message UserData {
  string user_id=1 [json_name="user_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"user_id"}];
  string user_name=2 [json_name="user_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户名"}];
  string login_account=3 [json_name="login_account",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"登录名"}];
  string email=4 [json_name="email",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"邮箱"}];
  AccountStatus user_status=5 [json_name="user_status",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否激活,1.已激活;0.未激活"}];
  UserType user_type=6 [json_name="user_type",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户类型,0.管理员;1.普通用户"}];
  string updated_at=7 [json_name="updated_at",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新时间"}];
  string updated_by=8 [json_name="updated_by",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新人"}];
}

message GetPageListRequest {
  string key_word=1 [json_name="key_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户名搜索"}];
  int64 user_status=2 [json_name="user_status",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否激活,1.已激活;0.未激活；-1全部", default:"-1"}];
  int64 user_type=3 [json_name="user_type",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户类型,0.管理员;1.普通用户；-1全部", default:"-1"}];
  int32 page_index=4 [json_name="page_index",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"页码", default:"1"}];
  int32 page_size=5 [json_name="page_size",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"每页数", default:"10"}];
}
message GetPageListResponse {
  repeated UserData user_list=1 [json_name="user_list",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户列表"}];
  int64 total=2 [json_name="total",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"总数"}];
}

message GetUserDetailRequest {
  string user_id=1 [json_name="user_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户id", required:["user_id"]}];
}
message GetUserDetailResponse {
  UserData user=1 [json_name="user",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户信息"}];
}


message GetUserSelfDetailRequest {
}
message GetUserSelfDetailResponse {
  UserData user=1 [json_name="user",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户信息"}];
}

message SetUserStatusRequest {
  string user_id=1 [json_name="user_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户id", required:["user_id"]}];
  AccountStatus user_status=2 [json_name="user_status",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否激活,1.已激活;0.未激活", required:["user_status"]}];
}
message SetUserStatusResponse {
}

message UpdateUserRequest {
  string user_id=1 [json_name="user_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户id",required:["user_id"]}];
  string user_name=2 [json_name="user_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户名",required:["user_name"], max_length:10, min_length:1}];
  string login_account=3 [json_name="login_account",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"登录名",required:["login_account"], max_length:10, min_length:6}];
  string email=4 [json_name="email",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"邮箱",required:["email"]}];
  AccountStatus user_status=5 [json_name="user_status",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否激活,1.已激活;0.未激活",required:["user_status"]}];
  UserType user_type=6 [json_name="user_type",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户类型,0.管理员;1.普通用户",required:["user_type"]}];
}
message UpdateUserResponse {
}


message UpdateUserSelfRequest {
  string user_name=1 [json_name="user_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户名",required:["user_name"], max_length:10, min_length:1}];
  string login_account=2 [json_name="login_account",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"登录名",required:["login_account"], max_length:10, min_length:6}];
  string email=3 [json_name="email",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"邮箱",required:["email"]}];

}
message UpdateUserSelfResponse {
}


message ResetUserPassWordRequest {
  string user_id=1 [json_name="user_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户id",required:["user_id"]}];
  string pass_word=2 [json_name="pass_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"密码",required:["pass_word"], max_length:10, min_length:6}];
}
message ResetUserPassWordResponse {
}

message UpdateUserPassWordRequest {
  string old_pass_word=1 [json_name="old_pass_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"原密码",required:["old_pass_word"], max_length:10, min_length:6}];
  string new_pass_word=2 [json_name="new_pass_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"新密码",required:["new_pass_word"], max_length:10, min_length:6}];
}
message UpdateUserPassWordResponse {
}

message DeleteUserRequest {
  string user_id=1 [json_name="user_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"用户id", required:["user_id"]}];
}
message DeleteUserResponse {

}

//===============================试卷模块=========================================
message CreateSalesPaperRequest {
  string sales_paper_name=1 [json_name="paper_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷名称",required:["paper_name"], max_length:20, min_length:1}];
  int64 recommend_time_lim=2 [json_name="recommend_time_lim",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"推荐作答时长：分钟",required:["recommend_time_lim"]}];
  double max_score=3 [json_name="max_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最高分数上限",required:["max_score"]}];
  double min_score=4 [json_name="min_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最低分数下限",required:["min_score"]}];
  bool is_enabled=5 [json_name="is_enabled",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否启用,1.启用;0.禁用",required:["is_enabled"]}];
  string mark=6 [json_name="mark",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"备注"}];
  string expression=7 [json_name="expression",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"标准分计算公式"}];
  int32 rounding=8 [json_name="rounding",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"保留小数位"}];
  bool is_sum_score=9 [json_name="is_sum_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否存在总分",required:["is_enabled"]}];
}
message CreateSalesPaperResponse {

}

message SalesPaperData {
  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_id"}];
  string sales_paper_name=2 [json_name="paper_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷名称"}];
  int64 recommend_time_lim=3 [json_name="recommend_time_lim",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"推荐作答时长：分钟"}];
  double max_score=4 [json_name="max_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最高分数上限"}];
  double min_score=5 [json_name="min_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最低分数下限"}];
  string expression=6 [json_name="expression",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"标准分计算公式"}];
  int32 rounding=7 [json_name="rounding",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"保留小数位"}];
  bool is_enabled=8 [json_name="is_enabled",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否启用,1.启用;0.禁用"}];
  bool is_used=9 [json_name="is_used",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否使用,1.使用;0.未使用"}];
  string mark=10 [json_name="mark",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"备注"}];
  bool is_sum_score=11 [json_name="is_sum_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否存在总分"}];
  string updated_at=12 [json_name="updated_at",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新时间"}];
  string updated_by=13 [json_name="updated_by",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新人"}];
}

message GetSalesPaperPageListRequest {
  string key_word=1 [json_name="key_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷名搜索"}];
  int64 sales_paper_status=2 [json_name="sales_paper_status",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷状态,1.启用;0.禁用；-1全部", default:"-1"}];
  int32 page_index=3 [json_name="page_index",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"页码", default:"1"}];
  int32 page_size=4 [json_name="page_size",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"每页数", default:"10"}];
}
message GetSalesPaperPageListResponse {
  repeated SalesPaperData sales_paper_list=1 [json_name="sales_paper_list",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷列表"}];
  int64 total=2 [json_name="total",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"总数"}];
}


message GetUsableSalesPaperPageListRequest {
  string key_word=1 [json_name="key_word",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷名搜索"}];
  int32 page_index=2 [json_name="page_index",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"页码", default:"1"}];
  int32 page_size=3 [json_name="page_size",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"每页数", default:"10"}];
}
message GetUsableSalesPaperPageListResponse {
  repeated SalesPaperData sales_paper_list=1 [json_name="sales_paper_list",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷列表"}];
  int64 total=2 [json_name="total",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"总数"}];
}

message GetSalesPaperDetailRequest {
  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷id", required:["sales_paper_id"]}];
}
message GetSalesPaperDetailResponse {
  SalesPaperData sales_paper=1 [json_name="sales_paper",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷信息"}];
}

message SetSalesPaperStatusRequest {
  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷id", required:["sales_paper_id"]}];
  SalesPaperStatus sales_paper_status=2 [json_name="sales_paper_status",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷状态,1.启用;0.禁用", required:["sales_paper_status"]}];
}
message SetSalesPaperStatusResponse {
}

message UpdateSalesPaperRequest {
  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷id",required:["sales_paper_id"]}];
  string sales_paper_name=2 [json_name="sales_paper_name",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷名称",required:["sales_paper_name"], max_length:20, min_length:1}];
  int64 recommend_time_lim=3 [json_name="recommend_time_lim",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"推荐作答时长：分钟",required:["recommend_time_lim"]}];
  double max_score=4 [json_name="max_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最高分数上限",required:["max_score"]}];
  double min_score=5 [json_name="min_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最低分数下限",required:["min_score"]}];
  bool is_enabled=6 [json_name="is_enabled",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否启用,1.启用;0.禁用",required:["is_enabled"]}];
  string mark=7 [json_name="mark",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"备注"}];
  string expression=8 [json_name="expression",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"标准分计算公式"}];
  int32 rounding=9 [json_name="rounding",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"保留小数位"}];
  bool is_sum_score=10 [json_name="is_sum_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"是否存在总分"}];
}
message UpdateSalesPaperResponse {
}


message DeleteSalesPaperRequest {
  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"试卷id", required:["sales_paper_id"]}];
}
message DeleteSalesPaperResponse {

}



//===============================试卷评语模块=========================================
message SaveSalesPaperCommentRequest {
  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_id", required:["sales_paper_id"]}];
  repeated SaveSalesPaperCommentData comment_data=2 [json_name="comment_data",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"评语集合", required:["comment_data"]}];
}
message SaveSalesPaperCommentResponse {

}

message SaveSalesPaperCommentData {
  string sales_paper_comment_id=1 [json_name="sales_paper_comment_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_comment_id"}];
  string content=2 [json_name="content",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"评语内容",required:["content"]}];
  double up_score=3 [json_name="up_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"上限分数区分点",required:["up_score"]}];
  double low_score=4 [json_name="low_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"下限分数区分点",required:["low_score"]}];
}

message SalesPaperCommentData {
  string sales_paper_comment_id=1 [json_name="sales_paper_comment_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_comment_id"}];
  string content=2 [json_name="content",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"评语内容"}];
  double up_score=3 [json_name="up_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"上限分数区分点"}];
  double low_score=4 [json_name="low_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"下限分数区分点"}];
  string updated_at=5 [json_name="updated_at",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新时间"}];
  string updated_by=6 [json_name="updated_by",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新人"}];
}

message GetSalesPaperCommentListRequest {
  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_id", required:["sales_paper_id"]}];
}

message GetSalesPaperCommentListResponse {
  repeated SalesPaperCommentData comment_data=1 [json_name="comment_data",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"评语内容"}];
}


//
////===============================维度模块=========================================
//message CreateDimensionRequest {
//  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_id", required:["sales_paper_id"]}];
//  repeated CreateDimensionData dimension_data=2 [json_name="dimension_data",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"维度集合", required:["dimension_data"]}];
//}
//message CreateDimensionResponse {
//
//}
//
//message CreateDimensionData {
//  string sales_paper_comment_id=1 [json_name="sales_paper_comment_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_comment_id"}];
//  string content=2 [json_name="content",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"评语内容",required:["content"]}];
//  double up_score=3 [json_name="up_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"上限分数区分点",required:["up_score"]}];
//  double low_score=4 [json_name="low_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"下限分数区分点",required:["low_score"]}];
//}
//
//message SalesPaperCommentData {
//  string sales_paper_comment_id=1 [json_name="sales_paper_comment_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_comment_id"}];
//  string content=2 [json_name="content",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"评语内容"}];
//  double up_score=3 [json_name="up_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"上限分数区分点"}];
//  double low_score=4 [json_name="low_score",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"下限分数区分点"}];
//  string updated_at=5 [json_name="updated_at",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新时间"}];
//  string updated_by=6 [json_name="updated_by",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"最后更新人"}];
//}
//
//message GetSalesPaperCommentListRequest {
//  string sales_paper_id=1 [json_name="sales_paper_id",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"sales_paper_id", required:["sales_paper_id"]}];
//}
//
//message GetSalesPaperCommentListResponse {
//  repeated SalesPaperCommentData comment_data=1 [json_name="comment_data",(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field)={title:"评语内容"}];
//}


enum LoginPlatform {
  NoKnow = 0;
  Management = 1;
  Exam=2;
}

enum AccountStatus {
  NotActive=0;  // 未激活
  Active=1;     // 已激活
}

enum SalesPaperStatus {
  Disable =0;  // 禁用
  Enable =1;     // 启用
}

enum UserType {
  Admin=0;    //管理员
  User=1;     //普通用户
}
