syntax = "proto3";

package eas_api.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "common/common.proto";
import "eas_api/v1/eas_models.proto";
option go_package = "eas_api/api/v1;v1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "考试后台接口";
    version: "1.0";
  };


  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "x-token";
      }
    }
  };
  security: {
    security_requirement: {
      key: "ApiKeyAuth";
      value: {};
    }
  };

};

service EasService {
  rpc Healthy(common.EmptyRequest) returns (common.HealthyReply) {
    option (google.api.http) = {get: "/healthz"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "健康检查",tags: ["安全"]};
  }
  // 登录
  rpc Login(LoginRequest) returns (LoginResponse){
    option (google.api.http)={post:"/v1/eas/login", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "登录",tags: ["登录"]};
  };
  //===============================用户模块=========================================
  //创建用户
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){
    option (google.api.http)={post:"/v1/user/create", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "创建用户",tags: ["用户模块"]};
  };

  //用户列表
  rpc GetPageList(GetPageListRequest) returns (GetPageListResponse){
    option (google.api.http)={get:"/v1/user/page_list"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "用户列表",tags: ["用户模块"]};
  };

  //用户详情
  rpc GetUserDetail(GetUserDetailRequest) returns (GetUserDetailResponse){
    option (google.api.http)={get:"/v1/user/detail"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "用户详情",tags: ["用户模块"]};
  };

  //查询用户个人信息
  rpc GetUserSelfDetail(GetUserSelfDetailRequest) returns (GetUserSelfDetailResponse){
    option (google.api.http)={get:"/v1/user/detail_self"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "查询用户个人信息",tags: ["用户模块"]};
  };

  //禁用/启用用户
  rpc SetUserStatus(SetUserStatusRequest) returns (SetUserStatusResponse){
    option (google.api.http)={post:"/v1/user/set_status", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "禁用/启用用户",tags: ["用户模块"]};
  };

  //修改用户信息
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){
    option (google.api.http)={post:"/v1/user/update", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "修改用户信息",tags: ["用户模块"]};
  };

  //修改用户个人信息
  rpc UpdateUserSelf(UpdateUserSelfRequest) returns (UpdateUserSelfResponse){
    option (google.api.http)={post:"/v1/user/update_self", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "修改用户个人信息",tags: ["用户模块"]};
  };

  //重置用户密码
  rpc ResetUserPassWord(ResetUserPassWordRequest) returns (ResetUserPassWordResponse){
    option (google.api.http)={post:"/v1/user/reset_password", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "重置用户密码",tags: ["用户模块"]};
  };

  //修改密码
  rpc UpdateUserPassWord(UpdateUserPassWordRequest) returns (UpdateUserPassWordResponse){
    option (google.api.http)={post:"/v1/user/update_password", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "修改密码",tags: ["用户模块"]};
  };

  //删除
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse){
    option (google.api.http)={post:"/v1/user/delete", body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "删除用户",tags: ["用户模块"]};
  };
}

